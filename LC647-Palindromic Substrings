# My plan
# use a helper function to get the number of palindromes around the center
# initialize a variable for count
# return the count after the loop
# Expand around the center while the characters are equal
# initialize a variable for the total number of palindromes
# iterate the string using a for loop
# Count odd-length palindromes centered at i
# Count even-length palindromes centered at i and i + 1
# Return the total count of palindromic substrings

class Solution:
    def countSubstrings(self, s: str) -> int:
        def palindromes_around_center(left: int, right: int) -> int:
            count = 0
            while left >= 0 and right < len(s) and s[left] == s[right]:
                count += 1
                left -= 1
                right += 1
            return count

        total_palindromes = 0

        for i in range(len(s)):
            total_palindromes += palindromes_around_center(i, i)
            total_palindromes += palindromes_around_center(i, i + 1)

        return total_palindromes
